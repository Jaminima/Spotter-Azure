@using Spotter_Azure.Views.Home
@{

    ViewData["Title"] = "Insights";
    ViewData["Desc"] = "View details around your spotify listen history.";

    authDetails auth = (authDetails)Model;
    if (!await auth.IsValid(spotterdbContext.dbContext))
    {

    }
    else
    {
        int p = int.Parse(auth.spotid);
        Spotify sp = spotterdbContext.dbContext.Spotifies.First(x => x.SpotId == p);

        if (sp != null)
        {
            Features totalFeatures = new Features();
            Features feature;

            Insights.InsightData[] data = await Insights.GetInsightDataAsync(sp);

            IEnumerable<Insights.InsightData> _data = data.Where(x => x.track.Features != null);

            foreach (Insights.InsightData insight in _data) totalFeatures += insight.track._features;

            <div class="card border-primary">

                @{
                    float tot = Math.Abs(totalFeatures.getTotal() / 100);
                    await spotterdbContext.dbContext.SaveChangesAsync();
                    Features average = totalFeatures / _data.Count() * 100;

                    Features totalDiv = totalFeatures / tot;
                                <div class="card-body">
                                    <h4 class="card-title">Average Song Vibe</h4>

                                    <div class="progress">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @(Math.Abs(totalDiv.acousticness))%;   background-color: deepskyblue;">Acousticness</div>

                                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @(Math.Abs(totalDiv.danceability))%; background-color: firebrick;">Danceability</div>

                                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @(Math.Abs(totalDiv.energy))%; background-color: cadetblue;">Energy</div>

                                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @(Math.Abs(totalDiv.speechiness))%; background-color: forestgreen;">Speechiness</div>

                                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @(Math.Abs(totalDiv.instrumentalness))%; background-color: hotpink;">Instrumentalness</div>

                                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @(Math.Abs(totalDiv.liveness))%; background-color: mediumpurple;">Liveness</div>

                                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @(Math.Abs(totalDiv.valence))%; background-color: goldenrod;">Valence</div>
                                    </div>
                                    <br />

                                    <ul class="list-group">
                                        <a href="#" class="list-group-item list-group-item-action active">What do these mean?</a>

                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Accousticness - How sure we are the song is Acoustic
                                            <span class="badge badge-primary badge-pill">@average.acousticness %</span>
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Danceability - How good of a groove you can get on to this song
                                            <span class="badge badge-primary badge-pill">@average.danceability %</span>
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Energy - The intensity and loudness
                                            <span class="badge badge-primary badge-pill">@average.energy %</span>
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Speechiness - The existence of spoken words (rap)
                                            <span class="badge badge-primary badge-pill">@average.speechiness %</span>
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Instrumentalness - Measures the abscence of vocals
                                            <span class="badge badge-primary badge-pill">@average.instrumentalness %</span>
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Liveness - If we think the song was recorded infront of an audience
                                            <span class="badge badge-primary badge-pill">@average.liveness %</span>
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Valence - The vibe of the track, Low values are sad, High are positive
                                            <span class="badge badge-primary badge-pill">@average.valence %</span>
                                        </li>
                                    </ul>
                                </div>
                }
            </div>

            <br/>

            <div class="card border-primary">
                <div class="card-body">
                    <h4 class="card-title">Song Vibe History</h4>
                </div>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">Title</th>
                            <th scope="col">Listens</th>
                            <th scope="col">Listened At</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (Insights.InsightData insight in _data.OrderByDescending(x => x.listen.ListenAt))
                            {
                                feature = insight.track._features;

                                                <tr class="table-secondary">
                                                    <th scope="row">@insight.track.Title</th>
                                                    <td>@insight.count</td>
                                                    <td>@insight.listen.ListenAt</td>
                                                </tr>

                                float total = Math.Abs(feature.getTotal() / 100);

                                <tr>
                                    <th scope="row" colspan="3">
                                        <div class="progress">
                                            <div class="progress-bar" role="progressbar" style="width: @(Math.Abs(feature.acousticness / total))%; background-color: deepskyblue;">Acousticness</div>
                                            <div class="progress-bar" role="progressbar" style="width: @(Math.Abs(feature.danceability / total))%; background-color: firebrick;">Danceability</div>
                                            <div class="progress-bar" role="progressbar" style="width: @(Math.Abs(feature.energy / total))%; background-color: cadetblue;">Energy</div>
                                            <div class="progress-bar" role="progressbar" style="width: @(Math.Abs(feature.speechiness / total))%; background-color: forestgreen;">Speechiness</div>
                                            <div class="progress-bar" role="progressbar" style="width: @(Math.Abs(feature.instrumentalness / total))%; background-color: hotpink;">Instrumentalness</div>
                                            <div class="progress-bar" role="progressbar" style="width: @(Math.Abs(feature.liveness / total))%; background-color: mediumpurple;">Liveness</div>
                                            <div class="progress-bar" role="progressbar" style="width: @(Math.Abs(feature.valence / total))%; background-color: goldenrod;">Valence</div>
                                        </div>
                                    </th>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
    }
}
